#Django_기본 파일 : 
mysite/__init__.py : 빈 파일, 연결된 파이썬에게 해당 폴더가 파이썬 패키지에 해당한다는 것을 알려준다.
mysite/urls.py : django 프로젝트를 위한 url 선언, 개발된 사이트의 목차 역할을 한다.
mystie/asgi.py : ASGI(Asynchronous Server Gateway Interface, web server와 프레임워크(Django), 어플리케이션을 비동기로 연결해 주는 Python의 표준 인터페이스)가 호환되는 웹서버의 진입지점으로 django project 를 수행한다.
mysite/wsgi.py : WSGI(Web Server Gatewat Interface, 파이썬 스크립트가 웹 서버와 통신하기 위한 인터페이스)가 호환되는 웹서버의 진입지점으로 django project 를 수행한다.

#Django_CRUD : 
📥 Create : 데이터 생성
👀 Read : 데이터 불러오기
✍️ Update : 데이터 수정 / 갱신
📤 Delete : 데이터 삭제하기

#Django_Template 상속 : 
Html 문서 중 기본이 되는 문서를 템플릿으로 정함, 이는 공통의 코드이므로 다른 문서에서 기본 템플릿의 코드가 필요하면 상속하여 사용한다.
[방법] 
1. 템플릿 상속을 위해 기본이 되는 'base.html'을 만든다.
2. 각 html 파일 최상단에 base.html을 상속받는 다는 사실을 명시해준다. {% extends 'base.html' %}

#Django_Static :
Static files (정적파일) : 이미지, JavaScript, CSS과 같은 추가 파일을 일컫는 말, 미리 서버에 저장되어있는 파일, 데이터베이스에 있는 그대로 구현됨.
1. 프로젝트에 이미 저장되어져 있는 파일, 개발할 때 이미 준비되어진 파일 = "Static"
2. 웹 서비스 이용자들이 업로드하는 파일 = "Media"
(Dynamic files (동적파일) : 서버 데이터들이 일정 수준 이상 가공된 후 제공되는 서비스 파일)
[방법]
1. APP폴더 안에 Static 폴더 제작
2. Static 파일의 위치와 저장 장소를 Setting.py에 코드로 작성한다.
3. 1)STATIC_URL : static 파일에 접근할 URL 작성, 2)STATICFILES_DIRS : static 파일의 위치 작성, 3)STATIC_ROOT : 어디에 모이는지에 대한 정보 작성

#Django_배포
1. Heroku 
2. Ubuntu 

  *멋쟁이사자처럼 강의를 들었으나, 강의의 내용이 어려워서 실습보단 용어와 프로젝트 약어, 문법에 대해 공부했습니다. 
  공부한 용어와 내용 첨부합니다. 🦁


참고 자료 링크 : https://youtu.be/alrLd9T96aA, https://djangojeng-e.github.io/2020/04/11/Writing-your-first-Django-app-part1-%EC%B4%88%EA%B8%B0%EC%84%A4%EC%A0%95/ 
